- Great use of styled components. It's an interesting library with many useful features. I like that you are
  passing css selectors as props to the component. Shows you have good understanding of how props work 
- Naming conventions are logical, making the code easier to read (class names and files)

- In React, components are almost always the only thing being exported from a file, so You should export your components as defaults e.g. export default and then you can remove the square brackets around the imports
- Your components which render text e.g. Title are not returning any native html elements. This means that all your titles are rendered as divs which is not semantic and could confuse other developers
  and also makes it harder for people using screenreaders to identify what is being shown to them
- Use Es lint for catching syntax errors early. Use a styleguide (standardjs, airbnb are two examples) for code consistency
- You don't need a constructor unless you need to set state. Can still access props on a class component
- Use stateless functional components wherever possible - easier to read, don't have to worry about the context of the 'this' keyword
  Read up on the differences between presentation vs container components https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0

- Folder restructure - helpful as app grows. Now has Components and Pages folders
- replaced class components with functional stateless components and removed unused constructor
- Made Arrow, Category and Title in to their own components - can now be reused and extended 
- 